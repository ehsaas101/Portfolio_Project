Dataset used : Covid_19 deaths and Covid_19 vaccinations
Skills used: Joins, Window Functions, Aggregate Functions, CTEs, Temp Tables, Creating view, Conversion of data types.

--Overview of the Datasets

SELECT *
FROM PortfolioProject..CovidDeaths
WHERE Continent IS NOT NULL
ORDER BY 3,4

SELECT *
FROM PortfolioProject..CovidVaccinations
WHERE Continent IS NOT NULL
ORDER BY 3,4


--Selection of data that is useful for analysis

SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM PortfolioProject..CovidDeaths
WHERE Continent IS NOT NULL
ORDER BY 1,2


--Total Cases vs Total Deaths
--Shows the likelihood of dying if you contract covid in your country

SELECT location, date, total_cases, new_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE location like '%india%'
AND Continent IS NOT NULL
ORDER BY 1,2



--Total Cases vs Population
--Shows what percentage of population got covid

SELECT location, date, Population, total_cases, (total_cases/Population)*100 as PercentagePopulationInfected
FROM PortfolioProject..CovidDeaths
AND Continent IS NOT NULL
ORDER BY 1,2



--Countries with Highest Infection Rate compared to the population

SELECT location, Population, MAX(total_cases) As HighestInfectionCount, MAX(total_cases/Population)*100 as PercentagePopulationInfected
FROM PortfolioProject..CovidDeaths
GROUP BY Location, Population
ORDER BY PercentagePopulationInfected DESC



--Looking at countries with Highest Death Count per Population

SELECT location, MAX(CAST(total_deaths As int)) As TotalDeathCount
FROM PortfolioProject..CovidDeaths
WHERE continent is not null                  
GROUP BY Location, Population
ORDER BY TotalDeathCount DESC
--The data has some rows where the continent is null and the continent is allocated to the location column. So we use "is not null" command to deal with this problem.



--BREAKING THINGS DOWN BY CONTINENT

--Continents with Highest Death Count per Population


SELECT continent, MAX(CAST(total_deaths As int)) As TotalDeathCount
FROM PortfolioProject..CovidDeaths
WHERE continent is not null                  
GROUP BY continent
ORDER BY TotalDeathCount DESC


--GLOBAL NUMBERS

--Total number of cases and deaths accross the world grouped by date

SELECT date, SUM(new_cases) As TotalCases, SUM(CAST(new_deaths as int)) As TotalDeaths, (SUM(CAST(new_deaths as int)))/(SUM(new_cases))*100 As DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE continent is not null
GROUP BY date
ORDER BY 1

-- Grand total cases and deaths

SELECT SUM(new_cases) As TotalCases, SUM(CAST(new_deaths as int)) As TotalDeaths
FROM PortfolioProject..CovidDeaths
WHERE continent is not null
ORDER BY 1 


--Total population vs total vaccinations

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
     ON dea.location=vac.location
	 AND dea.date=vac.date
WHERE dea.continent is not null
ORDER BY 2,3


--Cumulative count of people who recieved vaccine sorted by date for each location

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (PARTITION by dea.location ORDER BY dea.location, dea.date) As CumulativeCount
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
     ON dea.location=vac.location
	 AND dea.date=vac.date
WHERE dea.continent is not null
ORDER BY 2,3



--Using CTE to show percentage of population who has recieved Covid vaccine

WITH PopvsVac (continent, location, date, population, new_vaccinations, CumulativeCount)
as
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (PARTITION by dea.location ORDER BY dea.location, dea.date) As CumulativeCount
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
     ON dea.location=vac.location
	 AND dea.date=vac.date
WHERE dea.continent is not null
)

SELECT * ,(CumulativeCount/population)*100
From PopvsVac



--TEMP TABLE to perform calculation on Partition By

DROP Table if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
CumulativeCount numeric
)

Insert into #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (PARTITION by dea.location ORDER BY dea.location, dea.date) As CumulativeCount
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
     ON dea.location=vac.location
	 AND dea.date=vac.date
WHERE dea.continent is not null

SELECT * ,(CumulativeCount/population)*100
From  #PercentPopulationVaccinated



--Creating View to store data for later visualizations

DROP View IF exists PercentPopulationVaccinated
CREATE VIEW PercentPopulationVaccinated AS
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (PARTITION by dea.location ORDER BY dea.location, dea.date) As CumulativeCount
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
     ON dea.location=vac.location
	 AND dea.date=vac.date
WHERE dea.continent is not null

SELECT *
FROM PercentPopulationVaccinated
